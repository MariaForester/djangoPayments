openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /account/:
    get:
      operationId: listUserPersonalUses
      description: 'Getting info about wallets of the current user.'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
              examples:
                example1:
                  value:
                    code: 1
                    message: 'You do not own any wallets yet.'
          description: 'Return list of user`s wallets (code == 0) or message saying that the user has got no wallets yet (code == 1)'
      tags:
      - account
  /wallets/:
    get:
      operationId: listWallets
      description: 'Get list of all wallets in the sysgtem and who they belong to.'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
              examples:
                example1:
                  value:
                    code: 1
                    message: 'Not a single user has create a wallet yet.'
          description: 'Return list of wallets (code == 0) or message saying that nobody got any wallets yet (code == 1)'
      tags:
      - wallets
    post:
      operationId: createWallet
      description: Create a wallet for the current user.
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  user_name:
                    type: string
                  wallet_num:
                    type: string
                  wallet_sum:
                    type: integer
                    minimum: 0
              examples:
                example1:
                  value:
                    code: 0
                    message: 'Wallet with No.[4581899642942617] has been added for user amario3. Sum on the account: 100'
                    user_name: "amario3"
                    wallet_num: "4581899642942617"
                    wallet_sum: 100
          description: 'A new wallet for the current user has successfully been added.'
        '500':
          description: 'Internal server error when creatng a new wallet'

      tags:
      - wallets
  /auth/reg/:
    post:
      operationId: createRegistration
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      username:
                        type: string
                      password:
                        type: string
            examples:
              example1:
                value:
                  user:
                    username: 'amario3'
                    password: '12345678'
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      username:
                        type: string
              examples:
                example1:
                  value:
                    user:
                      username: 'amario3'
          description: ''
      tags:
      - auth
  /auth/token/:
    post:
      operationId: createTokenObtainPair
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
            examples:
              example1:
                value:
                    username: 'amario3'
                    password: '12345678'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
              examples:
                example1:
                  value:
                    refresh: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTYxODU4Mzk3NSwianRpIjoiMDA1NTg0ZDdmNGM1NDU3Y2EwMzliOTZlYTQxODQyODEiLCJ1c2VyX2lkIjo1fQ.bUcDUp_34PDAKPYMjVka8C4hNlpdBphjyI3YB5Z_zTE'
                    access: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjE4NDk3ODc1LCJqdGkiOiJmMDEzNmRiOGU2ZjI0ZTM4OGM3NTBiM2U5MjJjODI5NSIsInVzZXJfaWQiOjV9.7K4DAMAF_dAHueI5dq0ogL1qpvmgYYdboxCkfUvLe-I'
          description: 'Returns tokens to use for accessing the server.'
      tags:
      - auth
  /auth/token/refresh/:
    post:
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
            examples:
              example1:
                value:
                    username: 'amario3'
                    password: '12345678'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
              examples:
                example1:
                  value:
                    refresh: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTYxODU4Mzk3NSwianRpIjoiMDA1NTg0ZDdmNGM1NDU3Y2EwMzliOTZlYTQxODQyODEiLCJ1c2VyX2lkIjo1fQ.bUcDUp_34PDAKPYMjVka8C4hNlpdBphjyI3YB5Z_zTE'
          description: ''
      tags:
      - auth
  /transactions/:
    put:
      operationId: updateTransaction
      description: '1) get a number of source and destination wallets;
        2) get ids of wallets by numbers;
        3)subtract from source wallet sum;
        4) add transaction sum to the destination wallet sum;
        5) save transaction object;
        6) get money left on the source wallet by source wallet id;
        7) return Success message + money left.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
                type: object
                properties:
                  source_wallet_num:
                    type: string
                    example: "2250489245312279"
                  destination_wallet_num:
                    type: string
                    example: "7888854484089996"
                  sum:
                    type: integer
                    minimum: 1
                    example: 50
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    minimum: 0
                    maximum: 0
                  message:
                    type: string
                  sum_transferred:
                    type: integer
                  dest_wallet_num:
                    type: string
                  src_wallet_num:
                    type: string
              examples:
                example1:
                  value:
                    code: 0
                    message: 'Transferred 5 to 7888854484089996. Your balance: 53.'
                    sum_transferred: 5
                    dest_wallet_num: '7888854484089996'
                    src_wallet_num: '2250489245312279'
          description: 'Transaction has been completed successully. The money has been transfered to one account ftom the other. Code == 0'
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
              examples:
                example1:
                  value:
                    code: 3
                    message: 'Check your balance.'
          description: '
        1 - sum is non positive number;

        2 - wrong wallet num (does not belong to the current user);

        3 - sum is bigger than there is on the balance.'
      tags:
      - transactions
components:
  schemas:
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - username
      - password
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
      required:
      - refresh
